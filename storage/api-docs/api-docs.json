{
    "openapi": "3.0.0",
    "info": {
        "title": "Api Test Documentation",
        "description": "Implementation of Swagger with in Laravel",
        "contact": {
            "email": "admin@admin.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "/property/all": {
            "get": {
                "tags": [
                    "Props"
                ],
                "summary": "Get List Of Properties",
                "description": "Returns all properties.",
                "operationId": "getAllPropertie",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/property/detail/{id}": {
            "get": {
                "tags": [
                    "Props"
                ],
                "summary": "Get one property",
                "description": "Get one property.",
                "operationId": "getOneById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/property/post": {
            "post": {
                "tags": [
                    "Props"
                ],
                "summary": "Adds a new property",
                "operationId": "postProperty",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "size": {
                                        "type": "integer"
                                    },
                                    "floor": {
                                        "type": "integer"
                                    },
                                    "image": {
                                        "type": "string"
                                    },
                                    "room": {
                                        "type": "integer"
                                    },
                                    "price": {
                                        "type": "integer"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "zipcode": {
                                        "type": "integer"
                                    },
                                    "city": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/property/delete/{id}": {
            "delete": {
                "tags": [
                    "Props"
                ],
                "summary": "Delete a single property",
                "description": "delete a single property based on the ID supplied",
                "operationId": "deleteProperty",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of property to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "property deleted"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        }
    },
    "security": [
        []
    ]
}